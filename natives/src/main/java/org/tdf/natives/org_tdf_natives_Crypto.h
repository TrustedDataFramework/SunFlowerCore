/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_tdf_natives_Crypto */

#ifndef _Included_org_tdf_natives_Crypto
#define _Included_org_tdf_natives_Crypto
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_tdf_natives_Crypto
 * Method:    sm3
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_tdf_natives_Crypto_sm3
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_tdf_natives_Crypto
 * Method:    sm2PkFromSk
 * Signature: ([BZ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_tdf_natives_Crypto_sm2PkFromSk
  (JNIEnv *, jclass, jbyteArray, jboolean);

/*
 * Class:     org_tdf_natives_Crypto
 * Method:    sm2Verify
 * Signature: (J[B[B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_org_tdf_natives_Crypto_sm2Verify
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     org_tdf_natives_Crypto
 * Method:    sm2Sign
 * Signature: (J[B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_tdf_natives_Crypto_sm2Sign
  (JNIEnv *, jclass, jlong, jbyteArray, jbyteArray);

/*
 * Class:     org_tdf_natives_Crypto
 * Method:    mlsagVerify
 * Signature: (J[B[[B[B[[B[[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_tdf_natives_Crypto_mlsagVerify
  (JNIEnv *, jclass, jlong, jbyteArray, jobjectArray, jbyteArray, jobjectArray, jobjectArray);

/*
 * Class:     org_tdf_natives_Crypto
 * Method:    schnorrGenSigner
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_tdf_natives_Crypto_schnorrGenSigner
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_tdf_natives_Crypto
 * Method:    schnorrPkFromSk
 * Signature: ([B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_tdf_natives_Crypto_schnorrPkFromSk
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     org_tdf_natives_Crypto
 * Method:    schnorrRound1
 * Signature: (I[B[BLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_tdf_natives_Crypto_schnorrRound1
  (JNIEnv *, jclass, jint, jbyteArray, jbyteArray, jstring, jstring);

/*
 * Class:     org_tdf_natives_Crypto
 * Method:    schnorrRound2
 * Signature: ([BLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_tdf_natives_Crypto_schnorrRound2
  (JNIEnv *, jclass, jbyteArray, jstring, jstring);

#ifdef __cplusplus
}
#endif
#endif
